{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyP0CSnzF+vRE4nkl/dromE+"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tfntIgqsF_9n"
      },
      "outputs": [],
      "source": [
        "# 1 task - wrong forecasting by economist -Баєса\n",
        "P_1st_economist_error = (0.1 * 40) / ((0.1 * 40) + (0.2 * 60))\n",
        "print('Error probability of 1st economist =', P_1st_economist_error)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# 2- choose product set\n",
        "# M (X) \n",
        "M_X = 1000*0.5+1500*0.3+2000*0.2\n",
        "print(\"середнє значення income of 1st set/M(X) = \", M_X)\n",
        "\n",
        "# M (Y) \n",
        "M_Y = 1000*0.4+1500*0.4+1750*0.2\n",
        "print(\"середнє значення income of 2nd set/M(Y) = \", M_Y)\n",
        "\n",
        "if M_X > M_Y:\n",
        "  print(\"M_X > M_Y - 1st set is better\")\n",
        "elif M_X > M_Y:  \n",
        "  print(\"M_X < M_Y - 2nd set is better\")\n",
        "else:\n",
        "    print(\"M_X = M_Y - both are equal - no chance to choose\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZGTYDNGeGGm2",
        "outputId": "e796ec31-a8b7-4f3b-adab-6ec24225a089"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "середнє значення income of 1st set/M(X) =  1350.0\n",
            "середнє значення income of 2nd set/M(Y) =  1350.0\n",
            "M_X = M_Y - both are equal - no chance to choose\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import math\n",
        "\n",
        "D_X = (1000-M_X)**2*0.5 +  (1500-M_X)**2*0.3+ (2000-M_X)**2*0.2\n",
        "sigma_X = math.sqrt(D_X)\n",
        "print('Cередньоквадратичнe відхилення або стандартнe відхилення 1st set = ', sigma_X)\n",
        "\n",
        "D_Y = (1000-M_Y)**2*0.4 +  (1500-M_Y)**2*0.4+ (1750-M_Y)**2*0.2\n",
        "sigma_Y = math.sqrt(D_Y)\n",
        "print('Cередньоквадратичнe відхилення або стандартнe відхилення 2nd set = ',sigma_Y)\n",
        "\n",
        "if sigma_X < sigma_Y:\n",
        "  print(\"sigma_X < sigma_Y - 1st set is better because stand deviation of 1st is smaller - risk of lower income is lower\")\n",
        "elif sigma_X > sigma_Y:  \n",
        "  print(\"sigma_X > D_Y - 2nd set is better because stand deviation of 2nd is smaller - risk of lower income is lower\")\n",
        "else:\n",
        "    print(\"sigma_X = sigma_Y - both are equal - no chance to choose\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8Oz7diGgI-6o",
        "outputId": "97a94edb-6aa6-4371-a558-4a914c8f1d00"
      },
      "execution_count": 18,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Cередньоквадратичнe відхилення або стандартнe відхилення 1st set =  390.51248379533274\n",
            "Cередньоквадратичнe відхилення або стандартнe відхилення 2nd set =  300.0\n",
            "sigma_X > D_Y - 2nd set is better because stand deviation of 2nd is smaller - risk of lower income is lower\n"
          ]
        }
      ]
    }
  ]
}